CCEffect %{
  techniques:
  - name: opaque
    passes:
    - vert: general-vs:vert # builtin header
      frag: unlit-fs:frag
      properties: &props
        mainTexture:    { value: white }
        mainColor:      { value: [1, 1, 1, 1], editor: { type: color } }
        progress:       { value: 0.0, editor: { type: slider, range: [0, 1] } }
  - name: transparent
    passes:
    - vert: general-vs:vert # builtin header
      frag: unlit-fs:frag
      blendState:
        targets:
        - blend: true
          blendSrc: src_alpha
          blendDst: one_minus_src_alpha
          blendSrcAlpha: src_alpha
          blendDstAlpha: one_minus_src_alpha
      properties: *props
}%

CCProgram unlit-fs %{
  precision highp float;
  #include <output>
  #include <cc-fog-fs>

  in vec2 v_uv;
  in vec3 v_position;

  uniform sampler2D mainTexture;

  uniform Constant {
    vec4 mainColor;
    float progress; 
  };

  vec4 frag () {
    vec2 uv = v_uv * 2.0 - 1.0; 
    float r = length(uv); 
    float angle = atan(uv.y, uv.x); 
    angle = angle < 0.0 ? angle + 6.28318 : angle; 

    float progressAngle = progress * 6.28318; 
    float outerRadius = 0.5; 
    float innerRadius = 0.45; 

    vec4 col = vec4(0.0);

    if (r >= innerRadius && r <= outerRadius && angle <= progressAngle) {
      col = mainColor;
    }

    CC_APPLY_FOG(col, v_position); 
    return CCFragOutput(col);
  }
}%
